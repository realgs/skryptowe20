{"version":3,"sources":["components/ExchangeRates.js","components/SalesInformation.js","components/ApiDocs.js","App.js","reportWebVitals.js","index.js"],"names":["TODAY_DATE","Date","toISOString","slice","ExchangeRates","someDate","setDate","getDate","useState","response","setResponse","currency","setCurrency","startDate","setStartDate","endDate","setEndDate","isLoading","setIsLoading","isError","setIsError","isFirstRender","useRef","callExchanges","fetch","method","then","res","status","json","value","console","log","catch","_","useEffect","current","style","height","margin","className","type","id","name","min","max","onChange","event","target","defaultValue","role","ratesTableElements","rates","map","rate","index","scope","date","paddingRight","paddingLeft","options","chart","zoom","enabled","dataLabels","title","text","align","xaxis","categories","series","data","generateBody","SalesInformation","parseFloat","totalOrdersAmountInPLN","toFixed","ApiDocs","href","App","data-bs-toggle","aria-controls","aria-selected","aria-labelledby","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.853f3736.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\nimport ReactApexCharts from 'react-apexcharts'\n\nconst TODAY_DATE = new Date().toISOString().slice(0, 10);\n\n\nexport default function ExchangeRates() {\n\n    let someDate = new Date();\n    someDate.setDate(someDate.getDate() - 10);\n\n    const [response, setResponse] = useState(null);\n    const [currency, setCurrency] = useState('USD');\n    const [startDate, setStartDate] = useState(someDate.toISOString().slice(0, 10));\n    const [endDate, setEndDate] = useState(TODAY_DATE);\n    const [isLoading, setIsLoading] = useState(true)\n    const [isError, setIsError] = useState(false)\n    const isFirstRender = useRef(true)\n\n    useEffect(() => {\n        if (!isFirstRender.current) {\n            callExchanges();\n        }\n    }, [startDate, endDate, currency])\n\n    useEffect(() => {\n        isFirstRender.current = false\n    }, [])\n\n    function callExchanges() {\n        setIsLoading(true);\n        fetch(`http://localhost:8080/api/rates/${currency}?startDate=${startDate}&endDate=${endDate}`, {\n            method: 'GET'\n        }).then(res => {\n            if (res.status === 200) {\n                res.json().then(value => {\n                    console.log(value)\n                    setResponse(value)\n                    setIsLoading(false)\n                    if (isError) {\n                        setIsError(false)\n                    }\n                });\n            } else {\n                setIsError(true)\n                setIsLoading(false)\n            }\n        }).catch(_ => {\n            setIsError(true)\n            setIsLoading(false)\n        })\n    }\n\n    if (isFirstRender.current) {\n        callExchanges()\n        isFirstRender.current = false\n    }\n\n    function generateBody() {\n        if (isError) {\n            return (\n                <div className=\"alert alert-danger text-start m-5\" role=\"alert\">\n                    <h4 className=\"alert-heading\">Error!</h4>\n                    <p>There was an error while connecting to exchange api.</p>\n                    <hr/>\n                    <p className=\"mb-0\">Please try again later.</p>\n                </div>\n            );\n        } else if (isLoading) {\n            return (\n                <div className=\"spinner-border text-dark mt-5\" role=\"status\">\n                    <span className=\"visually-hidden\">Loading...</span>\n                </div>\n            );\n        } else {\n            const ratesTableElements = response.rates.map((rate, index) => {\n                return (<tr key={`rate-row-${index}`}>\n                    <th scope=\"row\">{rate.date}</th>\n                    <td>{rate.rate} zł</td>\n                </tr>)\n            })\n            return (\n                <div style={{paddingRight: 10, paddingLeft: 10}}>\n                    <ReactApexCharts options={{\n                        chart: {\n                            height: 350,\n                            type: 'line',\n                            zoom: {\n                                enabled: false\n                            }\n                        },\n                        dataLabels: {\n                            enabled: false\n                        },\n                        title: {\n                            text: `PLN to ${currency} exchange rates`,\n                            align: 'left'\n                        },\n                        xaxis: {\n                            type: 'datetime',\n                            categories: response.rates.map(rate => rate.date)\n                        },\n                    }} series={[{\n                        name: `${currency} price`,\n                        data: response.rates.map(rate => rate.rate)\n                    }]}\n                                     type=\"area\"\n                                     height={350}/>\n                    <table className=\"table table-sm table-hover text-start\">\n                        <thead className=\"table-dark\">\n                        <tr>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Rate</th>\n                        </tr>\n                        </thead>\n                        <tbody>{ratesTableElements}</tbody>\n                    </table>\n                </div>)\n        }\n    }\n\n    return (\n        <div>\n            <div style={{height: 25, margin: 10}}>\n                    <span className=\"float-start\">\n                    <input type=\"date\" id=\"start\" name=\"trip-start\" value={startDate} min=\"2012-01-01\"\n                           max={endDate}\n                           onChange={event => setStartDate(event.target.value)}\n                    /> ~ <input type=\"date\" id=\"end\" name=\"trip-start\" value={endDate} min={startDate}\n                                max={TODAY_DATE}\n                                onChange={event => setEndDate(event.target.value)}\n                    />\n                    </span><span className=\"float-end\">\n                    <select\n                        id=\"inputState\"\n                        onChange={event => setCurrency(event.target.value)}\n                        defaultValue=\"EUR\"\n                    >\n                    <option>EUR</option>\n                    <option>USD</option>\n                    <option>GBP</option>\n                    <option>CHF</option>\n                    <option>AUD</option>\n                    <option>RUB</option>\n                    <option>TRY</option>\n                    </select>\n                    </span>\n            </div>\n            {generateBody()}\n        </div>);\n}\n","import React, {useEffect, useRef, useState} from 'react';\n\nconst TODAY_DATE = new Date().toISOString().slice(0, 10);\n\nexport default function SalesInformation() {\n\n    const [currency, setCurrency] = useState('USD');\n    const [date, setDate] = useState(new Date(2019, 1, 1).toISOString().slice(0, 10));\n    const [response, setResponse] = useState(null);\n    const [isLoading, setIsLoading] = useState(true)\n    const [isError, setIsError] = useState(false)\n    const isFirstRender = useRef(true)\n\n    useEffect(() => {\n        if (!isFirstRender.current) {\n            callExchanges();\n        }\n    }, [date, currency])\n\n    useEffect(() => {\n        isFirstRender.current = false\n    }, [])\n\n    function callExchanges() {\n        setIsLoading(true);\n        fetch(`http://localhost:8080/api/sales/${currency}?date=${date}`, {\n            method: 'GET'\n        }).then(res => {\n            if (res.status === 200) {\n                res.json().then(value => {\n                    console.log(value)\n                    setResponse(value)\n                    setIsLoading(false)\n                    if (isError) {\n                        setIsError(false)\n                    }\n                });\n            } else {\n                setIsError(true)\n                setIsLoading(false)\n            }\n        }).catch(_ => {\n            setIsError(true)\n            setIsLoading(false)\n        })\n    }\n\n    if (isFirstRender.current) {\n        callExchanges()\n        isFirstRender.current = false\n    }\n\n    function generateBody() {\n        if (isError) {\n            return (<div className=\"alert alert-danger text-start m-5\" role=\"alert\">\n                <h4 className=\"alert-heading\">Error!</h4>\n                <p>There was an error while connecting to exchange api.</p>\n                <hr/>\n                <p className=\"mb-0\">Please try again later.</p>\n            </div>);\n        } else if (isLoading) {\n            return (<div className=\"spinner-border text-dark mt-5\" role=\"status\">\n                <span className=\"visually-hidden\">Loading...</span>\n            </div>);\n        } else {\n            return (\n                <div className=\"shadow card\">\n                    <h4 className=\"card-header\">{date} Sales</h4>\n                    <ul className=\"list-group list-group-flush\">\n                        <li className=\"list-group-item\">\n                            <strong>{parseFloat(response.totalOrdersAmountInPLN).toFixed(2)} PLN</strong>\n                        </li>\n                        <li className=\"list-group-item\">\n                            <strong>{parseFloat(response[`totalOrdersAmountIn${currency}`]).toFixed(2) + ' ' + currency}</strong>\n                        </li>\n                    </ul>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div>\n            <div style={{height: 25, margin: 10}}>\n            <span className=\"float-start\">\n                <input type=\"date\" id=\"start\" name=\"trip-start\" value={date} min=\"2012-01-01\"\n                       max={TODAY_DATE}\n                       onChange={event => setDate(event.target.value)}\n                />\n            </span>\n                <span className=\"float-end\">\n                  <select\n                      id=\"inputState\"\n                      onChange={event => setCurrency(event.target.value)}\n                      defaultValue='EUR'\n                  >\n                          <option>EUR</option>\n                          <option>USD</option>\n                          <option>GBP</option>\n                          <option>CHF</option>\n                          <option>AUD</option>\n                          <option>RUB</option>\n                          <option>TRY</option>\n                          </select>\n                          </span>\n            </div>\n            <div style={{paddingRight: 20, paddingLeft: 20}}>\n                {generateBody()}\n            </div>\n        </div>\n    );\n}","import React, {useEffect, useRef, useState} from 'react';\nimport ReactApexCharts from 'react-apexcharts'\n\nexport default function ApiDocs() {\n    return (<>\n            <h2 className=\"pt-2\">Exchange API Docs</h2>\n            <div className=\"p-3\">\n                <div className=\"row row-cols-1 row-cols-md-2 g-4\">\n                    <div className=\"col\">\n                        <div className=\"card shadow\">\n                            <h5 className=\"card-header\"><strong>Wymagane programy:</strong></h5>\n                            <div className=\"card-text\">\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">python3</li>\n                                    <li className=\"list-group-item\">npm</li>\n                                    <li className=\"list-group-item\">node.js</li>\n                                    <li className=\"list-group-item\">docker</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col\">\n                        <div className=\"card shadow\">\n                            <h5 className=\"card-header\"><strong>Wymagane paczki python:</strong></h5>\n                            <div className=\"card-text\">\n                                <ul className=\"list-group\">\n                                    <li className=\"list-group-item\">flask</li>\n                                    <li className=\"list-group-item\">flask_cors</li>\n                                    <li className=\"list-group-item\">flask_limiter</li>\n                                    <li className=\"list-group-item\">psycopg2</li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"text-start\">\n                    <h4 className=\"pt-2 mt-3 mb-3\">Instrukcja uruchomienia:</h4>\n                    <ul className=\"list-group shadow\">\n                        <li className=\"list-group-item\"><strong>1.)</strong> Przechodzimy do katalogu lab6</li>\n                        <li className=\"list-group-item\"><strong>2.)</strong> Uruchamiamy aplikacje komendą\n                            'docker-compose up'\n                        </li>\n                        <li className=\"list-group-item\"><strong>3.)</strong> Przechodzimy do przeglądarki</li>\n                        <li className=\"list-group-item\"><strong>4.)</strong> Wchodzimy na stronę znajdującą się pod\n                            adresem:\n                            'localhost:3000'\n                        </li>\n                    </ul>\n                    <h4 className=\"pt-2 mt-3 mb-3\">Endpointy:</h4>\n                    <div className=\"shadow card p-2\">\n                        <h5><strong>Kursy waluty: /api/rates/$currency_codes</strong></h5>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item list-group-item-secondary\"><strong>Parametry\n                                zapytania:</strong></li>\n                            <li className=\"list-group-item\"><strong>$currency_code</strong> - kod waluty dla\n                                oczkiwanych rat (\n                                Wspierane waluty: EUR, USD, CHF, GBP, TRY, AUD, RUB )\n                            </li>\n                        </ul>\n                        <ul className=\"list-group mt-2\">\n                            <li className=\"list-group-item list-group-item-secondary\"><strong>Parametry\n                                ścieżki</strong></li>\n                            <li className=\"list-group-item\"><strong>startDate</strong> - data początowa rat (np.\n                                2020-11-22)\n                            </li>\n                            <li className=\"list-group-item\"><strong>endDate</strong> - data końcowa rat (np.\n                                2020-11-28)\n                            </li>\n                        </ul>\n                        <ul className=\"list-group mt-2\">\n                            <li className=\"list-group-item list-group-item-secondary\"><strong>Przykładowe\n                                zapytania</strong></li>\n                            <li className=\"list-group-item\"><a className=\"link-info\"\n                                                               href=\"http://localhost:8080/api/rates/USD?startDate=2020-11-22&endDate=2020-11-28\">http://localhost:8080/api/rates/USD?startDate=2020-11-22&endDate=2020-11-28</a>\n                            </li>\n                            <li className=\"list-group-item\"><a className=\"link-info\"\n                                                               href=\"http://localhost:8080/api/rates/EUR?startDate=2019-02-22&endDate=2019-05-01\">http://localhost:8080/api/rates/EUR?startDate=2019-02-22&endDate=2019-05-01</a>\n                            </li>\n                        </ul>\n                    </div>\n                    <div className=\"shadow card p-2 mt-3\">\n                        <h5><strong>Dane sprzedaży: /api/sales/$currency_code</strong></h5>\n                        <ul className=\"list-group\">\n                            <li className=\"list-group-item list-group-item-secondary\"><strong>Parametry\n                                zapytania:</strong></li>\n                            <li className=\"list-group-item\"><strong>$currency_code</strong> - kod waluty dla\n                                oczkiwanych rat (\n                                Wspierane waluty: EUR, USD, CHF, GBP, TRY, AUD, RUB )\n                            </li>\n                        </ul>\n                        <ul className=\"list-group mt-2\">\n                            <li className=\"list-group-item list-group-item-secondary\"><strong>Parametry\n                                ścieżki</strong></li>\n                            <li className=\"list-group-item\"><strong>startDate</strong> - dzień, dla którego\n                                podsumowujemy sprzedaż (np. 2020-11-22)\n                            </li>\n                        </ul>\n                        <ul className=\"list-group mt-2\">\n                            <li className=\"list-group-item list-group-item-secondary\"><strong>Przykładowe\n                                zapytania</strong></li>\n                            <li className=\"list-group-item\"><a className=\"link-info\"\n                                                               href=\"http://localhost:8080/api/sales/USD?date=2019-03-10\">http://localhost:8080/api/sales/USD?date=2019-03-10</a>\n                            </li>\n                            <li className=\"list-group-item\"><a className=\"link-info\"\n                                                               href=\"http://localhost:8080/api/sales/EUR?date=2019-02-22\">http://localhost:8080/api/sales/EUR?date=2019-02-22</a>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n","import './App.css';\nimport ExchangeRates from \"./components/ExchangeRates\";\nimport SalesInformation from \"./components/SalesInformation\";\nimport ApiDocs from \"./components/ApiDocs\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <nav className=\"navbar navbar-dark bg-dark\">\n                <div className=\"container-fluid\">\n                    <a className=\"navbar-brand\" href=\"#\">\n                        <h4 className=\"text-white\">Exchange App</h4>\n                    </a>\n                </div>\n            </nav>\n            <ul className=\"nav nav-tabs\" id=\"myTab\" role=\"tablist\">\n                <li className=\"nav-item\" role=\"presentation\">\n                    <a className=\"nav-link active\" id=\"exchange-rates-tab\" data-bs-toggle=\"tab\" href=\"#exchange-rates\"\n                       role=\"tab\"\n                       aria-controls=\"home\" aria-selected=\"true\">Exchange rates</a>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                    <a className=\"nav-link\" id=\"sales-info-tab\" data-bs-toggle=\"tab\" href=\"#sales-info\" role=\"tab\"\n                       aria-controls=\"profile\" aria-selected=\"false\">Sales Information</a>\n                </li>\n                <li className=\"nav-item\" role=\"presentation\">\n                    <a className=\"nav-link\" id=\"api-docs-tab\" data-bs-toggle=\"tab\" href=\"#api-docs\" role=\"tab\"\n                       aria-controls=\"profile\" aria-selected=\"false\">Api Docs</a>\n                </li>\n            </ul>\n            <div className=\"tab-content\" id=\"myTabContent\">\n                <div className=\"tab-pane fade show active\" id=\"exchange-rates\" role=\"tabpanel\"\n                     aria-labelledby=\"exchange-rates-tab\">\n                    <ExchangeRates/>\n                </div>\n                <div className=\"tab-pane fade\" id=\"sales-info\" role=\"tabpanel\" aria-labelledby=\"sales-info-tab\">\n                    <SalesInformation/>\n                </div>\n                <div className=\"tab-pane fade\" id=\"api-docs\" role=\"tabpanel\" aria-labelledby=\"api-docs-tab\">\n                    <ApiDocs/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}